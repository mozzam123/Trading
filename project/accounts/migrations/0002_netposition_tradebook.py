# Generated by Django 4.2.6 on 2023-11-20 11:26

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NetPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createddate', models.DateTimeField(auto_now_add=True, db_column='createddate')),
                ('updateddate', models.DateTimeField(auto_now=True, db_column='updateddate')),
                ('date', models.DateField(auto_now_add=True, db_column='date')),
                ('positionno', models.CharField(db_column='positionno', max_length=300, unique=True)),
                ('userid', models.CharField(db_column='userid', max_length=30)),
                ('segment', models.CharField(db_column='segment', max_length=15)),
                ('ctclid', models.CharField(db_column='ctclid', default=0, max_length=25)),
                ('membercode', models.CharField(db_column='membercode', default=0, max_length=25)),
                ('accountcode', models.CharField(db_column='accountcode', default=0, max_length=25)),
                ('symbol', models.CharField(db_column='symbol', max_length=15)),
                ('expirydate', models.CharField(db_column='expirydate', max_length=10)),
                ('exchange', models.CharField(db_column='exchange', max_length=10)),
                ('token', models.DecimalField(db_column='token', decimal_places=0, max_digits=30)),
                ('securitytype', models.CharField(db_column='securitytype', max_length=10)),
                ('strikeprice', models.DecimalField(db_column='strikeprice', decimal_places=2, max_digits=22)),
                ('opttype', models.CharField(db_column='opttype', max_length=5)),
                ('bfqty', models.IntegerField(db_column='bfqty', default=0)),
                ('bfrate', models.FloatField(db_column='bfrate', default=0)),
                ('bfamt', models.FloatField(db_column='bfamt', default=0)),
                ('buyqty', models.IntegerField(db_column='buyqty', default=0)),
                ('buyrate', models.FloatField(db_column='buyrate', default=0)),
                ('buyamt', models.FloatField(db_column='buyamt', default=0)),
                ('sellqty', models.IntegerField(db_column='sellqty', default=0)),
                ('sellrate', models.FloatField(db_column='sellrate', default=0)),
                ('sellamt', models.FloatField(db_column='sellamt', default=0)),
                ('netqty', models.IntegerField(db_column='netqty', default=0)),
                ('netrate', models.FloatField(db_column='netrate', default=0)),
                ('netamt', models.FloatField(db_column='netamt', default=0)),
                ('cfqty', models.IntegerField(db_column='cfqty', default=0)),
                ('cfrate', models.FloatField(db_column='cfrate', default=0)),
                ('cfamt', models.FloatField(db_column='cfamt', default=0)),
                ('ltp', models.FloatField(db_column='ltp', default=0)),
                ('grossmtm', models.FloatField(db_column='grossmtm', default=0)),
                ('charges', models.FloatField(default=0)),
                ('netmtm', models.FloatField(default=0)),
                ('multiplier', models.IntegerField(db_column='multiplier', default=1, null=True)),
                ('basecurrency', models.CharField(db_column='basecurrency', max_length=4)),
                ('buybrokrate', models.FloatField(db_column='buybrokrate', default=0)),
                ('sellbrokrate', models.FloatField(db_column='sellbrokrate', default=0)),
                ('expirybuybrokrate', models.FloatField(db_column='expirybuybrokrate', default=0)),
                ('expirysellbrokrate', models.FloatField(db_column='expirysellbrokrate', default=0)),
                ('broktype', models.CharField(db_column='broktype', default='', max_length=50)),
                ('isusdlive', models.BooleanField(db_column='isusdlive', default=True)),
                ('usdrate', models.FloatField(db_column='usdrate', default=1)),
                ('usdcost', models.FloatField(db_column='usdcost', default=0)),
                ('clientsharingrate', models.FloatField(db_column='clientsharingrate', default=0)),
                ('brokersharingrate', models.FloatField(db_column='brokersharingrate', default=0)),
                ('comsharingrate', models.FloatField(db_column='comsharingrate', default=100)),
                ('sender', models.CharField(max_length=30)),
                ('ex_buyqty', models.FloatField(default=0, null=True)),
                ('ex_buyamt', models.FloatField(default=0, null=True)),
                ('ex_sellqty', models.FloatField(default=0, null=True)),
                ('ex_sellamt', models.FloatField(default=0, null=True)),
                ('ex_charges', models.FloatField(default=0, null=True)),
            ],
            options={
                'db_table': 'netposition',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TradeBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createddate', models.DateTimeField(auto_now_add=True, db_column='createddate')),
                ('updateddate', models.DateTimeField(auto_now=True, db_column='updateddate')),
                ('date', models.DateField(auto_now_add=True, db_column='date')),
                ('time', models.TimeField(auto_now_add=True, db_column='time')),
                ('tradenum', models.CharField(db_column='tradenum', max_length=40)),
                ('userId', models.CharField(db_column='userid', max_length=15)),
                ('ctclid', models.CharField(db_column='ctclid', default=0, max_length=15)),
                ('accountcode', models.CharField(db_column='accountcode', default=0, max_length=15)),
                ('membercode', models.CharField(db_column='membercode', default=0, max_length=15)),
                ('segment', models.CharField(db_column='segment', max_length=15)),
                ('token', models.DecimalField(db_column='token', decimal_places=0, max_digits=30)),
                ('multiplier', models.IntegerField(db_column='multiplier', default=1, null=True)),
                ('opttype', models.CharField(db_column='opttype', max_length=3)),
                ('expirydate', models.CharField(db_column='expirydate', max_length=10)),
                ('strikeprice', models.DecimalField(db_column='strikeprice', decimal_places=6, max_digits=25)),
                ('symbol', models.CharField(db_column='symbol', max_length=19)),
                ('buysellflag', models.IntegerField(db_column='buysellflag')),
                ('tradeqty', models.IntegerField(db_column='tradeqty')),
                ('tradeprice', models.DecimalField(db_column='tradeprice', decimal_places=6, max_digits=25)),
                ('maintradeid', models.IntegerField(db_column='maintradeid')),
                ('securitytype', models.CharField(db_column='securitytype', max_length=10)),
                ('sender', models.CharField(db_column='sender', max_length=3)),
                ('lotsize', models.DecimalField(db_column='lotsize', decimal_places=0, max_digits=30)),
                ('basecurrency', models.CharField(db_column='basecurrency', max_length=5)),
                ('divider', models.IntegerField(db_column='divider')),
            ],
            options={
                'db_table': 'tradebook',
                'managed': True,
            },
        ),
    ]
